# Build and publish Python distribution package to TestPyPI and PyPI
name: Build and publish wheels

on:
  push:
    branches:
      - master
    tags:
      - v* # Push events to v* tags
  # pull_request:
  #   branches:
  #     - master
  # Manual run
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  # Build wheels for macOS, Linux, and Windows
  build_wheels:
    name: Wheel for ${{ matrix.os }}-cp${{ matrix.python }}
    runs-on: ${{ matrix.os }}

    strategy:
      # Build the other wheels even if one fails
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python: [38, 39, 310, 311, 312]

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          submodules: true

      # - name: Set up Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.x'

      # - name: Install cibuildwheel
      #   run: python -m pip install cibuildwheel

      - name: Build wheels
        # run:
        #   python -m cibuildwheel --output-dir wheelhouse
        uses: pypa/cibuildwheel@v2.16.1
        env:
          CIBW_BUILD: cp${{ matrix.python }}-*
          # CIBW_ARCHS: all
          # CIBW_ARCHS_LINUX: auto aarch64
          CIBW_ARCHS_MACOS: x86_64 arm64
          # CIBW_ARCHS_MACOS: x86_64 arm64 universal2

      - name: Show files
        run: ls -lh wheelhouse
        shell: bash

      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  # Build source distribution on Linux
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: python -m pip install setuptools twine

    - name: Build source tarball
      run: python setup.py sdist

    - name: Check metadata
      run: twine check dist/*.tar.gz

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  # Upload the wheels and the source distribution
  upload_pypi:
    name: Upload to TestPyPI and PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - name: Publish package to TestPyPI
      uses: pypa/gh-action-pypi-publish@v1.8.10
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@v1.8.10
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
